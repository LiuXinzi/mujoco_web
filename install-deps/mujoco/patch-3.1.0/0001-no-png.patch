diff -Naur mujoco-2.3.7.orig/CMakeLists.txt mujoco-2.3.7/CMakeLists.txt
--- mujoco-2.3.7.orig/CMakeLists.txt	2023-07-20 11:13:55.000000000 +0200
+++ mujoco-2.3.7/CMakeLists.txt	2024-10-25 17:24:50.629501233 +0200
@@ -111,7 +111,6 @@
 target_link_libraries(
   mujoco
   PRIVATE ccd
-          lodepng
           qhullstatic_r
           tinyobjloader
           tinyxml2
diff -Naur mujoco-2.3.7.orig/src/user/user_objects.cc mujoco-2.3.7/src/user/user_objects.cc
--- mujoco-2.3.7.orig/src/user/user_objects.cc	2023-07-20 11:13:55.000000000 +0200
+++ mujoco-2.3.7/src/user/user_objects.cc	2024-10-25 17:26:37.132501606 +0200
@@ -23,7 +23,6 @@
 #include <string>
 #include <vector>
 
-#include "lodepng.h"
 #include <mujoco/mjmacro.h>
 #include <mujoco/mjmodel.h>
 #include <mujoco/mjplugin.h>
@@ -2126,45 +2125,7 @@
 
 // load elevation data from PNG format
 void mjCHField::LoadPNG(mjResource* resource) {
-  // determine data source
-  const void* inbuffer = 0;
-  int inbuffer_sz = mju_readResource(resource, &inbuffer);
-
-  if (inbuffer_sz < 1) {
-    throw mjCError(this, "could not read hfield PNG file '%s'", resource->name);
-  }
-
-  if (!inbuffer_sz) {
-    throw mjCError(this, "empty hfield PNG file '%s'", resource->name);
-  }
-
-  // load PNG from file or memory
-  unsigned int w, h, err;
-  std::vector<unsigned char> image;
-  err = lodepng::decode(image, w, h, (const unsigned char*) inbuffer, inbuffer_sz, LCT_GREY, 8);
-
-  // check
-  if (err) {
-    throw mjCError(this, "PNG load error '%s' in hfield id = %d", lodepng_error_text(err), id);
-  }
-  if (!w || !h) {
-    throw mjCError(this, "Zero dimension in PNG hfield '%s' (id = %d)", resource->name, id);
-  }
-
-  // allocate
-  data = (float*) mju_malloc(w*h*sizeof(float));
-  if (!data) {
-    throw mjCError(this, "could not allocate buffers in hfield");
-  }
-
-  // assign and copy
-  ncol = w;
-  nrow = h;
-  for (int c=0; c<ncol; c++)
-    for (int r=0; r<nrow; r++) {
-      data[c+(nrow-1-r)*ncol] = (float)image[c+r*ncol];
-    }
-  image.clear();
+ return;
 }
 
 
@@ -2527,28 +2488,7 @@
 void mjCTexture::LoadPNG(mjResource* resource,
                          std::vector<unsigned char>& image,
                          unsigned int& w, unsigned int& h) {
-  const void* inbuffer = 0;
-  int inbuffer_sz = mju_readResource(resource, &inbuffer);
-
-  // still not found
-  if (inbuffer_sz < 1) {
-    throw mjCError(this, "could not read PNG texture file '%s'", resource->name);
-  } else if (!inbuffer_sz) {
-    throw mjCError(this, "PNG texture file '%s' is empty", resource->name);
-  }
-
-
-  // load PNG from file or memory
-  unsigned int err = lodepng::decode(image, w, h, (const unsigned char*) inbuffer, inbuffer_sz, LCT_RGB, 8);
-
-  // check
-  if (err) {
-    throw mjCError(this,
-                   "PNG file load error '%s' in texture id = %d", lodepng_error_text(err), id);
-  }
-  if (w<1 || h<1) {
-    throw mjCError(this, "Empty PNG file in texture '%s' (id %d)", resource->name, id);
-  }
+  return;
 }
 
 
diff -Naur mujoco-2.3.7.orig/src/user/user_objects.h mujoco-2.3.7/src/user/user_objects.h
--- mujoco-2.3.7.orig/src/user/user_objects.h	2023-07-20 11:13:55.000000000 +0200
+++ mujoco-2.3.7/src/user/user_objects.h	2024-10-25 17:27:01.185517761 +0200
@@ -19,7 +19,6 @@
 #include <string>
 #include <vector>
 
-#include "lodepng.h"
 #include <mujoco/mjmodel.h>
 
 // forward declarations of all mjC/X classes
